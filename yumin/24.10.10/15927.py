# 팰린드롬이 아닌 가장 긴 부분 문자열의 길이를 출력하는 문제

# 팰린드롬이 맞을 경우, 2가지로 나뉜다
# ① 문자열이 한 개로 일정한(ex. 'ZZZ') 팰린드롬과, ② 그렇지 않은 팰린드롬(ex. 'ABCBA')
# 문자열이 한 개로 일정한 팰린드롬의 경우, -1을 출력
# 그렇지 않은 팰린드롬의 경우, 그냥 팰린드롬의 문자열 길이에서 -1을 해주면 되는 어찌보면 간단한 문제

# ③ 팰린드롬이 아예 아닐 경우
# 문자열의 길이를 출력

import math

text = input() # 입력값을 받는다

if len(set(text)) <= 1: # set 자료형을 사용하여 중복되는 문자열을 모두 삭제하고, ①의 경우에 해당하는지 체크
    print('-1') # ① 팰린드롬이라면, -1을 출력

else: # ②와 ③의 경우를 살펴보자
    half = math.floor(len(text) / 2) # 문자열을 2로 나누었을 때, 홀수의 경우 float 자료형이 되어버리기 때문에 이를 방지하고자 math 모듈로 소수점을 버린다.
    cnt = 0 # 팰린드롬인지 아닌지를 체크해줄 변수

    for i in range(half): # 문자열의 딱 절반만큼만 확인을 해주자
        if text[i] != text[-1 - i]: # 각각 해당하는 앞 부분의 문자열과, 뒷 부분의 문자열이 서로 다르다면 (Two-Pointer 처럼)
            cnt += 1 # ③의 경우에 해당하므로, 카운트를 해준다

    if cnt > 0: # ③, 팰린드롬이 아니라면
        print(len(text)) # 문자열 길이를 출력
    else: # ② 팰린드롬이라면
        print(len(text) - 1) # 문자열에서 -1을 한 값을 출력

# String, Ad-hoc
